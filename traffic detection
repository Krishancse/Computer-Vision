from tkinter import *
from PIL import Image, ImageTk
from tkinter import filedialog
import imageio
import cv2

class Window(Frame):
    def __init__(self, master=None):
        Frame.__init__(self, master)
        self.master = master
        self.pos = []
        self.line = []
        self.rect = []
        self.master.title("GUI")
        self.pack(fill=BOTH, expand=1)
        self.counter = 0

        menu = Menu(self.master)
        self.master.config(menu=menu)

        file_menu = Menu(menu)
        file_menu.add_command(label="Open", command=self.open_file)
        file_menu.add_command(label="Exit", command=self.client_exit)
        menu.add_cascade(label="File", menu=file_menu)

        analyze_menu = Menu(menu)
        analyze_menu.add_command(label="Region of Interest", command=self.region_of_interest)
        menu.add_cascade(label="Analyze", menu=analyze_menu)

        self.filename = "Images/home.jpg"
        self.imgSize = Image.open(self.filename)
        self.tkimage = ImageTk.PhotoImage(self.imgSize)
        self.w, self.h = 1366, 768

        self.canvas = Canvas(master, width=self.w, height=self.h)
        self.canvas.create_image(20, 20, image=self.tkimage, anchor='nw')
        self.canvas.pack()

    def open_file(self):
        self.filename = filedialog.askopenfilename()
        cap = cv2.VideoCapture(self.filename)
        reader = imageio.get_reader(self.filename)
        fps = reader.get_meta_data()['fps']
        ret, image = cap.read()
        cv2.imwrite('Images/preview.jpg', image)
        self.show_image('Images/preview.jpg')

    def show_image(self, frame):
        self.imgSize = Image.open(frame)
        self.tkimage = ImageTk.PhotoImage(self.imgSize)
        self.w, self.h = 1366, 768

        self.canvas.destroy()
        self.canvas = Canvas(master, width=self.w, height=self.h)
        self.canvas.create_image(8, 8, image=self.tkimage, anchor="nw")
        self.canvas.pack()

    def region_of_interest(self):
        root.config(cursor="plus")
        self.canvas.bind("<Button-1>", self.img_click)

    def client_exit(self):
        exit()


root = Tk()
app = Window(root)
root.mainloop()
