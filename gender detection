import os
import pickle
import warnings
import numpy as np
from FeaturesExtractor import FeaturesExtractor

warnings.filterwarnings("ignore")

class GenderIdentifier:
    def __init__(self, females_files_path, males_files_path, females_model_path, males_model_path):
        self.females_training_path = females_files_path
        self.males_training_path = males_files_path
        self.error = 0
        self.total_sample = 0
        self.features_extractor = FeaturesExtractor()

        # Load models
        self.females_gmm = pickle.load(open(females_model_path, 'rb'))
        self.males_gmm = pickle.load(open(males_model_path, 'rb'))

    def process(self):
        files = self.get_file_paths(self.females_training_path, self.males_training_path)
        
        # Read the test directory and get the list of test audio files
        for file in files:
            self.total_sample += 1
            print("%10s %-85s %1s" % ("--> TESTING", ":", os.path.basename(file)))
            vector = self.features_extractor.extract_features(file)
            winner = self.identify_gender(vector)
            expected_gender = file.split("/")[1][:-1]
            print("%10s %-6s %ls" % ("+ EXPECTATION", ":", expected_gender))
            print("%10s %-35s %ls" % ("+ IDENTIFICATION", ":", winner))
            
            if winner != expected_gender:
                self.error += 1
        accuracy = (float(self.total_sample - self.error) / float(self.total_sample)) * 100
        accuracy_msg = "**** Accuracy = " + str(round(accuracy, 3)) + " ***"
        print(accuracy_msg)
