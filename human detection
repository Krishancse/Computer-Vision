import cv2
import math

def detect_face_net(image):
    face_net = cv2.dnn.readNetFromCaffe("deploy.prototxt", "res10_300x300_ssd_iter_140000_fp16.caffemodel")
    (h, w) = image.shape[:2]
    blob = cv2.dnn.blobFromImage(cv2.resize(image, (300, 300)), 1.0, (300, 300), (104.0, 177.0, 123.0))
    face_net.setInput(blob)
    detections = face_net.forward()
    return detections, h, w

def age_gender_detection(image):
    detections, h, w = detect_face_net(image)
    for i in range(0, detections.shape[2]):
        confidence = detections[0, 0, i, 2]
        if confidence > 0.7:
            box = detections[0, 0, i, 3:7] * np.array([w, h, w, h])
            (startX, startY, endX, endY) = box.astype("int")
            face = image[startY:endY, startX:endX].copy()

            age_net = cv2.dnn.readNet("age_net.caffemodel", "age_deploy.prototxt")
            gender_net = cv2.dnn.readNet("gender_net.caffemodel", "gender_deploy.prototxt")

            MODEL_MEAN_VALUES = (78.4263377603, 87.7689143744, 114.895847746)
            gender_list = ['Male', 'Female']

            blob = cv2.dnn.blobFromImage(face, 1, (227, 227), MODEL_MEAN_VALUES, swapRB=False)
            gender_net.setInput(blob)
            gender_preds = gender_net.forward()
            gender = gender_list[gender_preds[0].argmax()]

            age_list = ['(0-2)', '(4-6)', '(8-12)', '(15-20)', '(25-32)', '(38-43)', '(48-53)', '(60-100)']
            age_net.setInput(blob)
            age_preds = age_net.forward()
            age = age_list[age_preds[0].argmax()]
            return gender, age

# Example usage:
image_path = 'path_to_your_image.jpg'
image = cv2.imread(image_path)
gender, age = age_gender_detection(image)
print("Gender: ", gender)
print("Age: ", age)
