from sklearn.datasets import load_files
from keras.utils import np_utils
import numpy as np
from glob import glob
from matplotlib.pyplot import figure, imshow, axis
from matplotlib.image import imread

def load_dataset(path):
    data = load_files(path)
    dog_targets = np_utils.to_categorical(np.array(data['target']), 133)
    dog_files = np.array(data['filenames'])
    return dog_files, dog_targets

# load train, test, and validation datasets
train_files, train_targets = load_dataset('../../../data/dog_images/train')
valid_files, valid_targets = load_dataset('../../../data/dog_images/valid')
test_files, test_targets = load_dataset('../../../data/dog_images/test')

# load list of dog names
dog_names = [item[20:-1] for item in sorted(glob("../../../data/dog_images/train/*/"))]

# print statistics about the dataset
print('There are %d total dog categories.' % len(dog_names))
print('There are %d training dog images.' % len(train_files))
print('There are %d validation dog images.' % len(valid_files))
print('There are %d test dog images.' % len(test_files))

def showImages(list_of_files, col=10, wSize=5, hSize=5, mypath='.'):
    fig = figure(figsize=(wSize, hSize))
    number_of_files = len(list_of_files)
    row = number_of_files // col + 1 if (number_of_files % col != 0) else number_of_files // col

    for i in range(number_of_files):
        a = fig.add_subplot(row, col, i + 1)
        image = imread(list_of_files[i])
        imshow(image)
        axis('off')

# Example usage:
# showImages(train_files)  # You can pass any list of files here
